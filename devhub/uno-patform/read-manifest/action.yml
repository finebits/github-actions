################################################################################
#                                                                              #
#   Copyright 2024 Finebits (https://finebits.com)                             #
#                                                                              #
#   Licensed under the Apache License, Version 2.0 (the "License");            #
#   you may not use this file except in compliance with the License.           #
#   You may obtain a copy of the License at                                    #
#                                                                              #
#       http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                              #
#   Unless required by applicable law or agreed to in writing, software        #
#   distributed under the License is distributed on an "AS IS" BASIS,          #
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
#   See the License for the specific language governing permissions and        #
#   limitations under the License.                                             #
#                                                                              #
################################################################################

---

name: Read the Uno Platform setup manifest

description: Read the Uno Platform setup manifest from the 'uno-check' tool

inputs:
  uno-check-manifest:
    type: string
    description: Specific manifest URL of the 'uno-check' tool
    default: ''
    required: false

  uno-check-version:
    type: string
    description: Specific version of the 'uno-check' tool
    default: ''
    required: false

outputs:
  content: 
    value: ${{ steps.read-manifest.outputs.content }}

runs:
  using: "composite"

  steps:
    - id: uno-check-version
      if: inputs.uno-check-version != '' && inputs.uno-check-manifest == ''
      shell: bash
      run: echo 'option=--version ${{ inputs.uno-check-version }}' >> $GITHUB_OUTPUT

    - name: install uno.check tool
      if: inputs.uno-check-manifest == ''
      shell: bash
      run: dotnet tool install --global uno.check ${{ steps.uno-check-version.outputs.option }}

    - id: skip-all
      if: inputs.uno-check-manifest == ''
      shell: bash
      run: |
        output=$(uno-check list)
        pattern=${{ env.regex-pattern }}
        skip_options=""

        while [[ $output =~ $pattern ]]; do
          skip_options="$skip_options --skip=${BASH_REMATCH[1]}"
          output=${BASH_REMATCH[2]}
        done

        echo "options=$skip_options" >> $GITHUB_OUTPUT
      env:
        regex-pattern: '\(([^\)]*)\)([^$]*)'

    - id: uno-check
      if: inputs.uno-check-manifest == ''
      shell: bash
      run: |
        log=$(mktemp)
        uno-check --verbose --non-interactive --ci --logfile=$log ${{ steps.skip-all.outputs.options }}

        content="$(cat "$log")"
        pattern=${{ env.regex-pattern }}

        if [[ "$content" =~ $pattern ]]; then
          echo "url=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
        else
          echo "::error::Uno-check manifest URL not found."
        fi
      env:
        regex-pattern: 'Loading Manifest from: ([^[:space:]]*)'

    - id: manifest-url
      shell: bash
      run: |
        input_url=${{ inputs.uno-check-manifest }}
        deafult_url=${{ steps.uno-check-manifest.outputs.url }}

        url="${input_url:-$deafult_url}"
        echo "url=$url" >> $GITHUB_OUTPUT

    - id: read-manifest
      uses: ./toolset/file/read
      with: 
        url: ${{ steps.manifest-url.outputs.url }}
