################################################################################
#                                                                              #
#   Copyright 2023 Finebits (https://finebits.com)                             #
#                                                                              #
#   Licensed under the Apache License, Version 2.0 (the "License");            #
#   you may not use this file except in compliance with the License.           #
#   You may obtain a copy of the License at                                    #
#                                                                              #
#       http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                              #
#   Unless required by applicable law or agreed to in writing, software        #
#   distributed under the License is distributed on an "AS IS" BASIS,          #
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
#   See the License for the specific language governing permissions and        #
#   limitations under the License.                                             #
#                                                                              #
################################################################################

name: Check Actions

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
      - release/**
  pull_request:
    branches:
      - main
      - develop
      - release/**

env:
  gist-id: ${{ vars.BADGE_COVERLET_COVERAGE_GIST_ID }}
  gist-owner: ${{ vars.GIST_OWNER }}
  gist-auth-token: ${{ secrets.TOKEN_GITHUB_GIST }}
jobs:

  check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Check Repository Secrets and Variables
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        exit=false
        if [ -z '${{ env.gist-id }}' ]; then
          echo -e "\n'BADGE_COVERLET_COVERAGE_GIST_ID' variable is missing!\n"
          exit=true
        fi

        if [ -z '${{ env.gist-auth-token }}' ]; then
          echo -e "\n'TOKEN_GITHUB_GIST' secret is missing!\n"
          exit=true
        fi

        if [ -z '${{ env.gist-owner }}' ]; then
          echo -e "\n'GIST_OWNER' variable is missing!\n"
          exit=true
        fi

        if [ "$exit" = true ]; then
          exit 1
        fi

    - name: Run version-number action
      id: version-number
      uses: ./version-number

    - name: Check version-number action
      run: |
        echo "Build version: ${{ steps.version-number.outputs.build-version }}"
        echo "Suffix version: ${{ steps.version-number.outputs.suffix-version }}"
        echo "Semantic version 1.0: ${{ steps.version-number.outputs.semantic-version-1 }}"
        echo "Semantic version 2.0: ${{ steps.version-number.outputs.semantic-version-2 }}"
        echo "Build version with githash: ${{ steps.version-number.outputs.build-githash-version }}"
        echo "Suffix version with githash: ${{ steps.version-number.outputs.suffix-githash-version }}"
        echo "Semantic version 2.0 with githash: ${{ steps.version-number.outputs.semantic-githash-version-2 }}"
        echo "Major: ${{ steps.version-number.outputs.major }}"
        echo "Minor: ${{ steps.version-number.outputs.minor }}"
        echo "Patch: ${{ steps.version-number.outputs.patch }}"
        echo "Build: ${{ steps.version-number.outputs.build }}"
        echo "Attempt: ${{ steps.version-number.outputs.attempt }}"
        echo "Today: ${{ steps.version-number.outputs.today }}"
        echo "Git hash: ${{ steps.version-number.outputs.githash }}"
        echo "Suffix: ${{ steps.version-number.outputs.suffix }}"

    - name: Run badges/shields-io-badge action
      if: ${{ env.gist-id != '' && env.gist-auth-token != '' }}
      id: badges-shields-io-badge
      uses: ./badges/shields-io-badge
      with:
        label: shields.io
        label-color: lightblue
        message: badge
        message-color: gold
        logo: github
        logo-color: blue
        style: flat

        gist-filename: "${{ github.event.repository.name }}-shields-io-badge.json"
        gist-id: ${{ env.gist-id }}
        gist-auth-token: ${{ env.gist-auth-token }}
        gist-owner: ${{ env.gist-owner }}

    - name: Check badges/shields-io-badge action
      if: ${{ env.gist-id != '' && env.gist-auth-token != '' }}
      run: |
        link='${{ steps.badges-shields-io-badge.outputs.badge-link }}'
        echo -e 'Badge link: '$link'\n'

    - name: Run badges/coverlet-coverage-badge action
      if: ${{ env.gist-id != '' && env.gist-auth-token != '' }}
      id: badges-coverlet-coverage-badge
      uses: ./badges/coverlet-coverage-badge
      with:
        report-root: ./badges/coverlet-coverage-badge/.test-reports
        report-filename: coverage.cobertura.xml

        gist-filename-format: "${{ github.event.repository.name }}-{0}-test-coverage.json"
        gist-id: ${{ env.gist-id }}
        gist-auth-token: ${{ env.gist-auth-token }}
        gist-owner: ${{ env.gist-owner }}

    - name: Check badges/coverlet-coverage-badge action
      if: ${{ env.gist-id != '' && env.gist-auth-token != '' }}
      run: |
        json='${{ steps.badges-coverlet-coverage-badge.outputs.badges-links }}'

        len=$(echo $json | jq '. | length')
        for ((i=0; i<$len; i++)); do
          echo -e "Badge link #"$i" $(echo $json | jq -r '.['$i']')\n"
        done

    - name: Run pack-nuget action
      uses: ./pack-nuget
      with:
        project: ./pack-nuget/.test-project/Nuget/Nuget.csproj
        configuration: Release
        push-to-nuget: false
        push-to-github: false
        upload-artifact: false
